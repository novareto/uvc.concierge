# -*- coding: utf-8 -*-

from urllib import parse
import json
from repoze.who.api import get_api


MALFORMED = [
    "client_error", {'message': 'Server was unable to read the command.'}]

UNKNOWN_COMMAND = [
    "client_error", {'message': 'Command is unknown.'}]


def Login(ws, data):
    formdata = dict(parse.parse_qsl(data))
    if ('login' in formdata) ^ ('password' in formdata):
        return ["login_error", {'message': 'missing data'}]

    who_api = get_api(ws.environ)
    authenticated, headers = who_api.login(formdata)
        
    if authenticated:
        return ["login_success", {'data': headers}]

    return ["login_failure", {'message': 'Login failed'}]


DISPATCHER = {
    'login': Login,
    }


def handle(ws):
    while True:
        m = ws.wait()
        if m is None:
            break

        try:
            message = json.loads(str(m, 'utf-8'))
            command, data = message
        except ValueError:
            result = MALFORMED
        else:
            handler = DISPATCHER.get(command)
            if handler is not None:
                result = handler(ws, data)
            else:
                result = UNKNOWN_COMMAND

        encoded = json.dumps(result)
        ws.send(encoded)
